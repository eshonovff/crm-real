// src/components/ProtectedRoute.js –∏–ª–∏ –ø—É—Ç—å, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —ç—Ç–æ—Ç —Ñ–∞–π–ª
import React from 'react';
import { Navigate, Outlet } from 'react-router-dom';
import { hasToken, isTokenExpired } from '../utils/token'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
const ProtectedRoute = ({ redirectPath = '/login' }) => {
  console.log("ProtectedRoute: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏");
  console.log("hasToken:", hasToken());
  console.log("isTokenExpired:", isTokenExpired());
  
  const isAuthenticated = hasToken() && !isTokenExpired();

  if (!isAuthenticated) {
    console.log("ProtectedRoute: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞", redirectPath);
    return <Navigate to={redirectPath} replace />;
  }

  console.log("ProtectedRoute: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ");
  return <Outlet />;
};
/*************  ‚ú® Windsurf Command üåü  *************/

/**
 * 
 * –û–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.
 * –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, —Ç–æ –æ–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ redirectPath.
 * –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, —Ç–æ –æ–Ω –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫
 * –º–∞—Ä—à—Ä—É—Ç–∞–º, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –≤ children.
 * 
 * @param {object} props - –æ–±—ä–µ–∫—Ç props, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π redirectPath
 * @param {string} [props.redirectPath='/'] - –ø—É—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç
 *                                            –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –µ—Å–ª–∏
 *                                            –æ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
 * @returns {ReactElement} - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç React, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
 *                           –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ—Å—Ç–µ–π
 */
export const GuestRoute = ({ redirectPath = '/' }) => {
  const isAuthenticated = hasToken() && !isTokenExpired();

  if (isAuthenticated) {
    return <Navigate to={redirectPath} replace />;
  }

  return <Outlet />;
/*******  a376cfad-77b4-475f-bff9-8bf1f74ddd1e  *******/
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏
 */
export const RoleBasedRoute = ({ allowedRole, redirectPath = '/' }) => {
  const isAuthenticated = hasToken() && !isTokenExpired();
  
  const userRole = localStorage.getItem('role');
  if (!isAuthenticated) {
    return <Navigate to="/login" replace />;
  }

  if (userRole !== allowedRole) {
    return <Navigate to={redirectPath} replace />;
  }

  return <Outlet />;
};

export default ProtectedRoute;